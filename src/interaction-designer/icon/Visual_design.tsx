/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import * as THREE from 'three'
import React, { useRef } from 'react'
import { useGLTF } from '@react-three/drei'
import { GLTF } from 'three-stdlib'

type GLTFResult = GLTF & {
  nodes: {
    pen: THREE.Mesh
    ruler: THREE.Mesh
    ruler_guides: THREE.Mesh
  }
  materials: {
    ['Maple wood texture']: THREE.MeshStandardMaterial
    ['Wood texture']: THREE.MeshStandardMaterial
    Wood: THREE.MeshStandardMaterial
  }
}

export default function Model({ ...props }: JSX.IntrinsicElements['group']) {
  const group = useRef<THREE.Group>()
  const { nodes, materials } = useGLTF('/visual_design.gltf') as GLTFResult
  return (
    <group ref={group} {...props} dispose={null}>
      <mesh geometry={nodes.pen.geometry} material={materials['Maple wood texture']} scale={0.9} />
      <mesh geometry={nodes.ruler.geometry} material={materials['Wood texture']} scale={[1, 0.7, 0.9]} />
      <mesh geometry={nodes.ruler_guides.geometry} material={materials.Wood} position={[0, 0.4, 0]} />
    </group>
  )
}

useGLTF.preload('/visual_design.gltf')
